name: Python
on: [push]
jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2
        with:
          submodules: recursive

      - name: Setup python3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: x64

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ubuntu-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ubuntu-pip-
            ubuntu-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Lint with flake8
        run: flake8
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2

      - name: Setup python3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: x64

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ubuntu-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ubuntu-pip-
            ubuntu-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Compile and set up the perfect player
        run: |
          cd exact-solver/
          make
          cd ..
          ln -s exact-solver/c4solver perfect-player
          ln -s extra/7x6.book ./

      - name: PyTest
        run: coverage run -m pytest test/

      - name: Generate coverage report
        run: coverage html -i

      - name: Archive HTML coverage results
        uses: actions/upload-artifact@v2
        with:
          name: coverage-html-report
          path: coverage_html_report/

  doc:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Git repository
        uses: actions/checkout@v2

      - name: Setup python3.8
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: x64

      - name: Cache pip
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ubuntu-pip-${{ hashFiles('requirements.txt') }}
          restore-keys: |
            ubuntu-pip-
            ubuntu-

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Build the doc
        run:  |
          cd doc
          make html
          
      - name: Archive HTML documentation
        uses: actions/upload-artifact@v2
        with:
          name: documentation-html
          path: doc/_build/html/
  
  update-gh-pages:
    needs: [test, lint, doc]
    runs-on: ubuntu-latest
    steps:
      - name: Download coverage artifact 
        uses: actions/download-artifact@v2
        with:
          name: coverage-html-report 
          path: coverage-html-report

      - name: Download documentation artifact 
        uses: actions/download-artifact@v2
        with:
          name: documentation-html 
          path: documentation-html

      - name: Clone gh-pages repo and commit new files
        run: |
          git clone https://github.com/arn4/connect4.git --branch gh-pages --single-branch gh-pages
          cp -r coverage-html-report gh-pages/coverage/
          cp -r documentation-html gh-pages/doc/
          git config --local user.email "workflows@arn4.github.io"
          git config --local user.name "Python Workflow"
          git add .
          git commit -m "Update documentation and coverage" -a || true
      
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          branch: gh-pages
          directory: gh-pages
          github_token: ${{ secrets.TOKEN }}


